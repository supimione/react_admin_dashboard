{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.REACT_APP_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nconst ReduxStore = {\n  store,\n  persistor\n};\nexport default ReduxStore;","map":{"version":3,"sources":["/home/supratim/Documents/react_admin_dashboard/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","createSagaMiddleware","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","REACT_APP_ENV","push","store","run","persistor","ReduxStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,aAAZ,KAA8B,aAAlC,EAAiD;AAC7CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGX,YAAY,CAACS,KAAD,CAA9B;AAEP,MAAMG,UAAU,GAAG;AAAEH,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAnB;AAEA,eAAeC,UAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.REACT_APP_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nconst ReduxStore = { store, persistor };\n\nexport default ReduxStore;"]},"metadata":{},"sourceType":"module"}