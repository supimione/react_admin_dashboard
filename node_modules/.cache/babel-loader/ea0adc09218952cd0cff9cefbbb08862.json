{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResolveLocale = void 0;\n\nvar LookupMatcher_1 = require(\"./LookupMatcher\");\n\nvar BestFitMatcher_1 = require(\"./BestFitMatcher\");\n\nvar utils_1 = require(\"./utils\");\n\nvar UnicodeExtensionValue_1 = require(\"./UnicodeExtensionValue\");\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\n\n\nfunction ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n  var matcher = options.localeMatcher;\n  var r;\n\n  if (matcher === 'lookup') {\n    r = (0, LookupMatcher_1.LookupMatcher)(availableLocales, requestedLocales, getDefaultLocale);\n  } else {\n    r = (0, BestFitMatcher_1.BestFitMatcher)(availableLocales, requestedLocales, getDefaultLocale);\n  }\n\n  var foundLocale = r.locale;\n  var result = {\n    locale: '',\n    dataLocale: foundLocale\n  };\n  var supportedExtension = '-u';\n\n  for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n    var key = relevantExtensionKeys_1[_i];\n    (0, utils_1.invariant)(foundLocale in localeData, \"Missing locale data for \".concat(foundLocale));\n    var foundLocaleData = localeData[foundLocale];\n    (0, utils_1.invariant)(typeof foundLocaleData === 'object' && foundLocaleData !== null, \"locale data \".concat(key, \" must be an object\"));\n    var keyLocaleData = foundLocaleData[key];\n    (0, utils_1.invariant)(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\n    var value = keyLocaleData[0];\n    (0, utils_1.invariant)(typeof value === 'string' || value === null, \"value must be string or null but got \".concat(typeof value, \" in key \").concat(key));\n    var supportedExtensionAddition = '';\n\n    if (r.extension) {\n      var requestedValue = (0, UnicodeExtensionValue_1.UnicodeExtensionValue)(r.extension, key);\n\n      if (requestedValue !== undefined) {\n        if (requestedValue !== '') {\n          if (~keyLocaleData.indexOf(requestedValue)) {\n            value = requestedValue;\n            supportedExtensionAddition = \"-\".concat(key, \"-\").concat(value);\n          }\n        } else if (~requestedValue.indexOf('true')) {\n          value = 'true';\n          supportedExtensionAddition = \"-\".concat(key);\n        }\n      }\n    }\n\n    if (key in options) {\n      var optionsValue = options[key];\n      (0, utils_1.invariant)(typeof optionsValue === 'string' || typeof optionsValue === 'undefined' || optionsValue === null, 'optionsValue must be String, Undefined or Null');\n\n      if (~keyLocaleData.indexOf(optionsValue)) {\n        if (optionsValue !== value) {\n          value = optionsValue;\n          supportedExtensionAddition = '';\n        }\n      }\n    }\n\n    result[key] = value;\n    supportedExtension += supportedExtensionAddition;\n  }\n\n  if (supportedExtension.length > 2) {\n    var privateIndex = foundLocale.indexOf('-x-');\n\n    if (privateIndex === -1) {\n      foundLocale = foundLocale + supportedExtension;\n    } else {\n      var preExtension = foundLocale.slice(0, privateIndex);\n      var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n      foundLocale = preExtension + supportedExtension + postExtension;\n    }\n\n    foundLocale = Intl.getCanonicalLocales(foundLocale)[0];\n  }\n\n  result.locale = foundLocale;\n  return result;\n}\n\nexports.ResolveLocale = ResolveLocale;","map":{"version":3,"sources":["/home/supratim/Documents/react_admin_dashboard/node_modules/@formatjs/intl-localematcher/abstract/ResolveLocale.js"],"names":["Object","defineProperty","exports","value","ResolveLocale","LookupMatcher_1","require","BestFitMatcher_1","utils_1","UnicodeExtensionValue_1","availableLocales","requestedLocales","options","relevantExtensionKeys","localeData","getDefaultLocale","matcher","localeMatcher","r","LookupMatcher","BestFitMatcher","foundLocale","locale","result","dataLocale","supportedExtension","_i","relevantExtensionKeys_1","length","key","invariant","concat","foundLocaleData","keyLocaleData","Array","isArray","supportedExtensionAddition","extension","requestedValue","UnicodeExtensionValue","undefined","indexOf","optionsValue","privateIndex","preExtension","slice","postExtension","Intl","getCanonicalLocales"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolveLocale = void 0;\nvar LookupMatcher_1 = require(\"./LookupMatcher\");\nvar BestFitMatcher_1 = require(\"./BestFitMatcher\");\nvar utils_1 = require(\"./utils\");\nvar UnicodeExtensionValue_1 = require(\"./UnicodeExtensionValue\");\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\nfunction ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n    var matcher = options.localeMatcher;\n    var r;\n    if (matcher === 'lookup') {\n        r = (0, LookupMatcher_1.LookupMatcher)(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    else {\n        r = (0, BestFitMatcher_1.BestFitMatcher)(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    var foundLocale = r.locale;\n    var result = { locale: '', dataLocale: foundLocale };\n    var supportedExtension = '-u';\n    for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n        var key = relevantExtensionKeys_1[_i];\n        (0, utils_1.invariant)(foundLocale in localeData, \"Missing locale data for \".concat(foundLocale));\n        var foundLocaleData = localeData[foundLocale];\n        (0, utils_1.invariant)(typeof foundLocaleData === 'object' && foundLocaleData !== null, \"locale data \".concat(key, \" must be an object\"));\n        var keyLocaleData = foundLocaleData[key];\n        (0, utils_1.invariant)(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\n        var value = keyLocaleData[0];\n        (0, utils_1.invariant)(typeof value === 'string' || value === null, \"value must be string or null but got \".concat(typeof value, \" in key \").concat(key));\n        var supportedExtensionAddition = '';\n        if (r.extension) {\n            var requestedValue = (0, UnicodeExtensionValue_1.UnicodeExtensionValue)(r.extension, key);\n            if (requestedValue !== undefined) {\n                if (requestedValue !== '') {\n                    if (~keyLocaleData.indexOf(requestedValue)) {\n                        value = requestedValue;\n                        supportedExtensionAddition = \"-\".concat(key, \"-\").concat(value);\n                    }\n                }\n                else if (~requestedValue.indexOf('true')) {\n                    value = 'true';\n                    supportedExtensionAddition = \"-\".concat(key);\n                }\n            }\n        }\n        if (key in options) {\n            var optionsValue = options[key];\n            (0, utils_1.invariant)(typeof optionsValue === 'string' ||\n                typeof optionsValue === 'undefined' ||\n                optionsValue === null, 'optionsValue must be String, Undefined or Null');\n            if (~keyLocaleData.indexOf(optionsValue)) {\n                if (optionsValue !== value) {\n                    value = optionsValue;\n                    supportedExtensionAddition = '';\n                }\n            }\n        }\n        result[key] = value;\n        supportedExtension += supportedExtensionAddition;\n    }\n    if (supportedExtension.length > 2) {\n        var privateIndex = foundLocale.indexOf('-x-');\n        if (privateIndex === -1) {\n            foundLocale = foundLocale + supportedExtension;\n        }\n        else {\n            var preExtension = foundLocale.slice(0, privateIndex);\n            var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n            foundLocale = preExtension + supportedExtension + postExtension;\n        }\n        foundLocale = Intl.getCanonicalLocales(foundLocale)[0];\n    }\n    result.locale = foundLocale;\n    return result;\n}\nexports.ResolveLocale = ResolveLocale;\n"]},"metadata":{},"sourceType":"script"}